name: Release Build

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write

env:
  APP_NAME: lumma

jobs:
  releaseAndroid:
    name: Release Android
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.5'
          channel: 'stable'
          cache: true

      - name: Verify Flutter Installation
        run: |
          flutter config --no-analytics
          flutter doctor -v
          flutter --version

      - name: Install Dependencies
        run: flutter pub get

      - name: Extract Version Info
        id: version
        run: |
          TAG="${{ github.ref_name }}"
          VERSION=$(echo $TAG | sed 's/^v//')
          BUILD_NUM="${{ github.run_number }}"

          echo "tag=$TAG" >> $GITHUB_OUTPUT
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "build_number=$BUILD_NUM" >> $GITHUB_OUTPUT

          echo "=== Build Info ==="
          echo "Tag: $TAG"
          echo "Version: $VERSION"
          echo "Build Number: $BUILD_NUM"

      - name: Create Environment File
        run: |
          cat > .env.release << EOF
          MODEL_PROVIDER=openrouter
          MODEL_BASE_URL=https://openrouter.ai/api/v1
          MODEL_API_KEY=sk-or-v1
          MODEL_NAME=deepseek/deepseek-chat-v3-0324:free
          USE_LOCAL_CONFIG=false
          EOF

      - name: Setup Android Signing
        run: |
          # 使用调试签名进行GitHub Actions构建
          # 在android目录下创建调试keystore的符号链接
          cd android
          if [ ! -f "app/debug.keystore" ]; then
            # 如果debug.keystore不存在，创建一个
            keytool -genkey -v -keystore app/debug.keystore -storepass android -alias androiddebugkey -keypass android -keyalg RSA -keysize 2048 -validity 10000 -dname "CN=Android Debug,O=Android,C=US"
          fi

          # 创建临时的release keystore指向debug keystore
          if [ ! -f "my-release-key.jks" ]; then
            cp app/debug.keystore my-release-key.jks
          fi

      - name: Build Android Release APK
        run: |
          flutter build apk \
            --release \
            --build-name="${{ steps.version.outputs.version }}" \
            --build-number="${{ steps.version.outputs.build_number }}" \
            --target-platform android-arm64 \
            --no-shrink

      - name: Prepare Release Files
        run: |
          mkdir -p release-files

          # Copy ARM64 APK file
          if [ -f "build/app/outputs/flutter-apk/app-release.apk" ]; then
            cp "build/app/outputs/flutter-apk/app-release.apk" \
               "release-files/${{ env.APP_NAME }}_${{ steps.version.outputs.version }}_arm64.apk"
            echo "✅ ARM64 APK ready"
          else
            echo "❌ ARM64 APK not found"
            exit 1
          fi

          echo "📦 Release files:"
          ls -la release-files/

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.version.outputs.tag }}
          name: ${{ env.APP_NAME }} ${{ steps.version.outputs.tag }}
          files: release-files/*.apk
          body: |
            # 🌟 ${{ env.APP_NAME }} ${{ steps.version.outputs.tag }}

            **AI驱动的智能问答日记应用**

            ## 🔧 技术信息
            - **版本**: ${{ steps.version.outputs.version }}
            - **构建号**: ${{ steps.version.outputs.build_number }}
            - **提交**: ${{ github.sha }}
            - **Flutter版本**: 3.32.5

            ---

            > 💡 如果遇到安装或使用问题，请在Issues中反馈
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
